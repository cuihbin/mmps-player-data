package com.zzvc.mmps.model;

// Generated 2010-10-22 15:04:15 by Hibernate Tools 3.2.4.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.TreeSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.Sort;
import org.hibernate.annotations.SortType;

/**
 * PlayerKey generated by hbm2java
 */
@Entity
@Table(name = "player_key")
public class PlayerKey implements java.io.Serializable, Comparable<PlayerKey> {

	private Long id;
	private PlayerKey playerKey;
	private String keyName;
	private Set<PlayerKeyValue> playerKeyValues = new TreeSet<PlayerKeyValue>();
	private Set<PlayerKey> playerKeies = new TreeSet<PlayerKey>();

	public PlayerKey() {
	}

	public PlayerKey(Long id) {
		this.id = id;
	}

	public PlayerKey(Long id, PlayerKey playerKey, String keyName,
			Set<PlayerKeyValue> playerKeyValues, Set<PlayerKey> playerKeies) {
		this.id = id;
		this.playerKey = playerKey;
		this.keyName = keyName;
		this.playerKeyValues = playerKeyValues;
		this.playerKeies = playerKeies;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_key_id")
	public PlayerKey getPlayerKey() {
		return this.playerKey;
	}

	public void setPlayerKey(PlayerKey playerKey) {
		this.playerKey = playerKey;
	}

	@Column(name = "key_name")
	public String getKeyName() {
		return this.keyName;
	}

	public void setKeyName(String keyName) {
		this.keyName = keyName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "playerKey")
	@Cascade(CascadeType.ALL)
	@Sort(type=SortType.NATURAL)
	public Set<PlayerKeyValue> getPlayerKeyValues() {
		return this.playerKeyValues;
	}

	public void setPlayerKeyValues(Set<PlayerKeyValue> playerKeyValues) {
		this.playerKeyValues = playerKeyValues;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "playerKey")
	@Cascade(CascadeType.ALL)
	@Sort(type=SortType.NATURAL)
	public Set<PlayerKey> getPlayerKeies() {
		return this.playerKeies;
	}

	public void setPlayerKeies(Set<PlayerKey> playerKeies) {
		this.playerKeies = playerKeies;
	}

	@Override
	public int compareTo(PlayerKey o) {
		return keyName.compareTo(o.getKeyName());
	}
}
